AWSTemplateFormatVersion: '2010-09-09'
Description: "AWS CloudFormation template that deploys the IAM Assume Role that will be used by the ASA-iam-key-auto-rotation-and-notifier-solution.yaml CloudFormation template."

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: IAM Role Configurations
        Parameters:
          - ExecutionRoleName
          - PrimaryAccountID
          - AWSOrgID
    ParameterLabels:
      ExecutionRoleName:
        default: IAM Execution Role Name
      PrimaryAccountID:
        default: Primary AWS Account ID
      AWSOrgID:
        default: AWS Organization ID
Parameters:
  IAMRoleName:
    Description: "Enter the name of IAM Role"
    Type: String
    Default: "iam-key-rotation-lambda-assume-role"
  ExecutionRoleName:
    Description: "Enter the name of IAM Execution Role that will assume the sub-account role for Lambda Execution."
    Type: String
    Default: "iam-key-rotation-lambda-execution-role"
  PrimaryAccountID:
    Description: "Enter the primary AWS Account ID that will you will be deploying the ASA-iam-key-auto-rotation-and-notifier-solution.yaml CloudFormation template to."
    Type: String
    Default: ""
  AWSOrgID:
    Description: "Enter your AWS Organization ID, this will be used to restricted execution permissions to only approved AWS Accounts within your AWS Organization."
    Type: String
    Default: ""

Resources:
  ##################################################################
  # ASA IAM Role that will be assumed by the ASA IAM Key Rotation 
  #  Function.
  ##################################################################
  ASAIAMAssumedRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref IAMRoleName
      Description: !Sub "IAM Assume Role used by ${PrimaryAccountID}'s ASA-IAM-Access-Key-Rotation-Function Lambda. This role is used to inspect and rotate IAM Keys that are violating the company's key rotation policy."
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS:
              - !Sub ${PrimaryAccountID}            
          Action: sts:AssumeRole
      Policies:
          - PolicyName: AllowRotationFunctionPermissions
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - iam:List*
                    - iam:CreatePolicy
                    - iam:CreateAccessKey
                    - iam:DeleteAccessKey
                    - iam:UpdateAccessKey
                    - iam:PutUserPolicy
                    - iam:GetUserPolicy
                    - iam:GetAccessKeyLastUsed
                    - iam:GetUser
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - iam:AttachUserPolicy
                  Resource:
                    - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:user/*"
                - Effect: Allow
                  Action:
                    - secretsmanager:PutResourcePolicy
                    - secretsmanager:PutSecretValue
                    - secretsmanager:DescribeSecret
                    - secretsmanager:CreateSecret
                    - secretsmanager:GetResourcePolicy
                  Resource:
                    - !Sub "arn:${AWS::Partition}:secretsmanager:*:${AWS::AccountId}:secret:*"
                - Effect: Allow
                  Action:
                    - iam:GetGroup
                  Resource: !Sub arn:${AWS::Partition}:iam::${PrimaryAccountID}:role/${ExecutionRoleName}
                  Condition:
                    StringEquals:
                      aws:PrincipalOrgID: !Ref AWSOrgID
      Path: /

